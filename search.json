[
  {
    "objectID": "sub2.html",
    "href": "sub2.html",
    "title": "Data Visualization Assignments",
    "section": "",
    "text": "# Assignment 1\n## Objective: Identify data or model problems using visualization\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\n\n## Some Simple Analysis\nplot(anscombe$x1,anscombe$y1)\n\n\n\n\n\n\n\n\n\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n\n\n# Create four model objects\n## Model 1\n\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\n\n\n## Model 2\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\n\n\n## Model 3\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\n\n\n## Model 4\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\n\n\n\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\n\n\n\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\n\n\n\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\n\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\n\n\npar(op)\n\n\n## Title: Fall color\n# Credit: https://fronkonstin.com\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\nlibrary(gsubfn)\n\nWarning: package 'gsubfn' was built under R version 4.3.3\n\n\nLoading required package: proto\n\n\nWarning: package 'proto' was built under R version 4.3.3\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\n\nWarning: package 'readr' was built under R version 4.3.2\n\n\nWarning: package 'purrr' was built under R version 4.3.2\n\n\nWarning: package 'dplyr' was built under R version 4.3.2\n\n\nWarning: package 'stringr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.2\n\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"darkgreen\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n\n\n\n\n\n# Assignment 2\n\n### Paul Murrell's R examples (selected)\n\nplot(pressure, pch=16)  # You can change the pch according to your needs\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\n\n\n\n\n\n#  Examples of standard high-level plots \n\n### Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n## Scatterplot\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n## Setting label orientation, margins c(bottom, left, top, right) & text size\n\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"red\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for? The horizontal axis\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6))) \n\n\n\n\n\n\n\n\n\n# Exercise: Can you generate these charts individually?  Try these functions using another dataset. Be sure to work on the layout and margins\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.3.3\n\n# Set the path to your file\nfile_path1 &lt;- \"C:/Users/nabil/Downloads/HPI.xlsx\"\n\n# Read the Excel file\nHPI &lt;- read_excel(file_path1)\n\nNew names:\n• `` -&gt; `...4`\n\n\n\n# Histogram of Life Expectancy\npar(mfrow = c(1, 1))  # Set default plot layout\nhist(HPI$`Life Expectancy (years)`, \n     main = \"Distribution of Life Expectancy\", \n     xlab = \"Life Expectancy (years)\", \n     col = \"lightblue\", \n     border = \"black\")\n\n\n\n\n\n\n\n\n\n# Bar chart of average Life Expectancy by Continent\navg_life_exp &lt;- tapply(HPI$`Life Expectancy (years)`, HPI$Continent, mean, na.rm=TRUE)\nbar_colors &lt;- \"lightgreen\"\n\n# Create the bar plot\nbarplot(avg_life_exp, col = bar_colors, ylim = c(0, 90), \n        main = \"Average Life Expectancy by Continent\", \n        xlab = \"Continent\", ylab = \"Average Life Expectancy (years)\")\n\n# Add axis and box around the plot\nbox()    # Draw a box around the plot\n\n# Add a legend at the top-right corner (not cluttered)\nlegend(\"topright\", legend = names(avg_life_exp), fill = bar_colors, cex = 0.8)\n\n\n\n\n\n\n\n\n\n# Boxplot of Carbon Footprint by Continent\nboxplot(HPI$`Carbon Footprint (tCO2e)` ~ HPI$Continent, \n        main = \"Carbon Footprint by Continent\", \n        xlab = \"Continent\", \n        ylab = \"Carbon Footprint (tCO2e)\", \n        col = \"lightgreen\")\n\n\n\n\n\n\n\n\n\n# Pie chart for the number of countries by continent\ncontinent_table &lt;- table(HPI$Continent)\npie(continent_table, \n    col = rainbow(length(continent_table)))\n\n# Add margin text for description\nmtext(\"Pie Chart of Countries by Continent\", side = 3, line = 2)\n\n\n\n\n\n\n\n\n\n# Line chart of HPI Rank vs Life Expectancy\nplot(HPI$`HPI rank`, HPI$`Life Expectancy (years)`, \n     type = \"n\",  # Create an empty plot first\n     xlab = \"HPI Rank\", ylab = \"Life Expectancy (years)\")\n\n# Add lines and points\nlines(HPI$`HPI rank`, HPI$`Life Expectancy (years)`, col = \"blue\")\npoints(HPI$`HPI rank`, HPI$`Life Expectancy (years)`, pch = 19, col = \"red\")\n\n# Add text labels to specific points\nmtext(\"Line Chart of HPI Rank vs Life Expectancy\", side = 3, line = 2)\n\n\n\n\n\n\n\n\n\n# Prepare sorted values for x (life_exp) and y (gdp)\nlife_exp_sorted &lt;- sort(unique(HPI$`Life Expectancy (years)`))\ngdp_sorted &lt;- sort(unique(HPI$`GDP per capita ($)`))\n\n# Create a grid of x (life_exp) and y (gdp)\nlife_exp_grid &lt;- seq(min(life_exp_sorted), max(life_exp_sorted), length.out = 50)\ngdp_grid &lt;- seq(min(gdp_sorted), max(gdp_sorted), length.out = 50)\n\n# Interpolate z (hpi) values into a matrix form that corresponds to the grid\n# We will use a simple interpolation method here for the sake of the 3D plot\nhpi_matrix &lt;- outer(life_exp_grid, gdp_grid, FUN = function(x, y) {\n  # Use a simple linear model or any function relating life expectancy and GDP to HPI\n  # For simplicity, let's assume HPI increases with both life expectancy and GDP\n  return((x / max(life_exp_grid)) * (y / max(gdp_grid)) * max(HPI$HPI, na.rm = TRUE))\n})\n\n# Create the 3D perspective plot\npersp(life_exp_grid, gdp_grid, hpi_matrix, \n      theta = 30, phi = 20, \n      col = \"lightblue\", \n      xlab = \"Life Expectancy (years)\", \n      ylab = \"GDP per Capita ($)\", \n      zlab = \"HPI\",\n      main = \"3D Perspective of Life Expectancy, GDP, and HPI\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nabila Parijat’s website",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I am Nabila Parijat. I am a third year PhD student in the Public and Nonprofit Management Program the University of Texas at Dallas (UTD). My research interests include program evaluation, performance measurement and immigration. Currently, I am studying the labor market effects of high-skilled immigration to the United States (US) through the H1B program. I am concurrently submitting and presenting research in conferences relating to the effectiveness of US-funded programs in food assistance and foreign aid.\n\n\nPlease view my Resume to know further about me. I am interested in research-related positions in both academia, local and international nonprofits, and thinktanks.\nDownload my Resume"
  },
  {
    "objectID": "sub2.html#anscombe-1973-quartlet",
    "href": "sub2.html#anscombe-1973-quartlet",
    "title": "Assignments",
    "section": "",
    "text": "data(anscombe) # Load Anscombe’s data View(anscombe) # View the data summary(anscombe)"
  },
  {
    "objectID": "sub2.html#some-simple-analysis",
    "href": "sub2.html#some-simple-analysis",
    "title": "Assignments",
    "section": "",
    "text": "plot(anscombe\\(x1,anscombe\\)y1)\nsummary(anscombe)"
  },
  {
    "objectID": "sub2.html#model-1",
    "href": "sub2.html#model-1",
    "title": "Assignments",
    "section": "Model 1",
    "text": "Model 1\nlm1 &lt;- lm(y1 ~ x1, data=anscombe) summary(lm1)"
  },
  {
    "objectID": "sub2.html#model-2",
    "href": "sub2.html#model-2",
    "title": "Assignments",
    "section": "Model 2",
    "text": "Model 2\nlm2 &lt;- lm(y2 ~ x2, data=anscombe) summary(lm2)"
  },
  {
    "objectID": "sub2.html#model-3",
    "href": "sub2.html#model-3",
    "title": "Assignments",
    "section": "Model 3",
    "text": "Model 3\nlm3 &lt;- lm(y3 ~ x3, data=anscombe) summary(lm3)"
  },
  {
    "objectID": "sub2.html#model-4",
    "href": "sub2.html#model-4",
    "title": "Assignments",
    "section": "Model 4",
    "text": "Model 4\nlm4 &lt;- lm(y4 ~ x4, data=anscombe) summary(lm4)\nplot(anscombe\\(x1,anscombe\\)y1) abline(coefficients(lm1))\nplot(anscombe\\(x2,anscombe\\)y2) abline(coefficients(lm2))\nplot(anscombe\\(x3,anscombe\\)y3) abline(coefficients(lm3))\nplot(anscombe\\(x4,anscombe\\)y4) abline(coefficients(lm4))"
  },
  {
    "objectID": "sub2.html#fancy-version-per-help-file",
    "href": "sub2.html#fancy-version-per-help-file",
    "title": "Assignments",
    "section": "Fancy version (per help file)",
    "text": "Fancy version (per help file)\nff &lt;- y ~ x mods &lt;- setNames(as.list(1:4), paste0(“lm”, 1:4))"
  },
  {
    "objectID": "sub2.html#title-fall-color",
    "href": "sub2.html#title-fall-color",
    "title": "Assignments",
    "section": "Title: Fall color",
    "text": "Title: Fall color"
  }
]